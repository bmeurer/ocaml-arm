
#     module type S = sig type t and s = t end
# module type S' = sig type s = int end
#   module type S = sig module rec M : sig  end and N : sig  end end
# module type S' = sig module rec N : sig  end end
#     * * * * * * * * * * * * * * * *         type -'a t
class type c = object method m : [ `A ] t end
#   module M : sig val v : (#c as 'a) -> 'a end
#       val id : 'a -> 'a = <fun>
#       val ko : 'a -> unit = <fun>
# 
